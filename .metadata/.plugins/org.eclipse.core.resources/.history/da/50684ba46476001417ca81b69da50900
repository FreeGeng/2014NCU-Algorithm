import java.util.*;

public class Main {

	static Scanner scanner = new Scanner(System.in);
	static int V;
	static int E;
	static int node[];
	static int route[][];
	static int input[][];
	static boolean visit[];
	static int d[];

	public static void main(String args[]) {
		while (scanner.hasNext()) {
			String temp[] = scanner.nextLine().split(" ");
			V = Integer.parseInt(temp[0]);
			E = Integer.parseInt(temp[1]);
			node = new int[V + 1];
			route = new int[V + 1][V + 1];
			visit = new boolean[V + 1];
			d = new int[V + 1];
			input = new int[100][2];
			for (int i = 0; i <= V; i++) {

				if (i == 0) {
					node[i] = 0;
				} else {
					String temp2[] = scanner.nextLine().split(" ");
					int nodeWeight = Integer.parseInt(temp2[1]);
					node[i] = nodeWeight;
				}
			}

			for (int i = 0; i <= V; i++) {
				for (int j = 0; j <= V; j++) {
					if (i == 0 || j == 0) {
						route[i][j] = 0;
					}
				}
			}
			for (int i = 0; i < E; i++) {
				String temp3[] = scanner.nextLine().split(" ");
				int x = Integer.parseInt(temp3[0]);
				int y = Integer.parseInt(temp3[1]);
				int routeWeight = Integer.parseInt(temp3[2]);
				route[x][y] = routeWeight;
			}
			for(int i=0;i<V+1;i++){
				for(int j=0;j<V+1;j++){
					System.out.print(route[i][j]+" ");
				}
				System.out.println();
			}
			int a = 0;

			while (scanner.hasNextLine()) {
				String temp4[] = scanner.nextLine().split(" ");

				if (Integer.parseInt(temp4[0]) == 0
						&& Integer.parseInt(temp4[1]) == 0) {
					System.exit(0);
				}
				else if (Integer.parseInt(temp4[0]) >0
						&& Integer.parseInt(temp4[1]) >0) {
					input[a][0] = Integer.parseInt(temp4[0]);
					input[a][1] = Integer.parseInt(temp4[1]);
					a++;
				} else {
//					for (int i = 0; i <= a; i++) {
//						judge(input[i][0],input[i][1]);
//						
//					}
						
				}

			}

		
		}
	}

	static void judge(int source,int end) {
		for (int i = 0; i < V + 1; i++) {
			visit[i] = false;
		}
		for (int i = 0; i < V + 1; i++) {
			d[i] = Integer.MAX_VALUE;
		}

		d[source] = 0;
		

		for (int k = 0; k < V + 1; k++) {
			int a = -1;
			int b = -1;
			int min = Integer.MAX_VALUE;
			for (int i = 0; i < V + 1; i++) {
				if (!visit[i] && d[i] < min) {
					a = i;
					min = d[i];
				}
			}
			if (a == -1) {
				break;
			}
			visit[a] = true;

			for (b = 0; b < V + 1; b++) {
				if (!visit[b] && d[a] + route[a][b] + node[a] < d[b]) {
					d[b] = d[a] + route[a][b] + node[a];		
				}
			}
		}
		System.out.println(d[end]);
	}
}

/*
 * 7 10 1 50 2 30 3 15 4 25 5 15 6 20 7 35 1 2 10 1 3 5 2 4 6 2 5 8 3 4 7 3 6 10
 * 4 5 5 4 7 12 5 7 6 6 7 8 1 2 5 7 1 7 2 6 5 3 -1 -1
 */